name: GTest
on:
  push:
    branches: [ main, TestingStudentCode2 ]
  pull_request:
    branches: [ main, TestingStudentCode2  ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Clone GTest
      run:  git clone https://github.com/google/googletest.git
    - name: Install gtest manually
      working-directory: ./googletest
      run:  sudo apt install python3-pip &&
            cmake . &&
            make &&
            sudo make install
    - name: Install Bazel
      run: sudo npm install -g @bazel/bazelisk
    - uses: actions/checkout@v1
    - name: g++ compilation
      run:  g++ -g -std=c++17 -Wall -Wextra -Wno-sign-compare -o bld.out building.cpp
    - name: clang tidy build
      run: clang++ -g -std=c++17 -Wall -Wextra -Wno-sign-compare building.cpp
    - name: run it
      run: /usr/bin/valgrind bld.out --leak-check=full --errors-for-leak-kinds=definite --error-exitcode=3

  Run_Test_1:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Clone GTest
      run:  git clone https://github.com/google/googletest.git
    - name: Install gtest manually
      working-directory: ./googletest
      run:  sudo apt install python3-pip &&
            cmake . &&
            make &&
            sudo make install
    - name: Install Bazel
      run: sudo npm install -g @bazel/bazelisk
    - name: Install Valgrind
      run:  sudo apt install -y valgrind
    - uses: actions/checkout@v1
    - name: Run Test
      run:  bazel test --cxxopt=-std=c++14 -g --verbose_failures --run_under='/usr/bin/valgrind --leak-check=full --errors-for-leak-kinds=definite --error-exitcode=3' --test_output=all //Tests:APP_test
  Run_Test_2:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Clone GTest
      run:  git clone https://github.com/google/googletest.git
    - name: Install gtest manually
      working-directory: ./googletest
      run:  sudo apt install python3-pip &&
            cmake . &&
            make &&
            sudo make install
    - name: Install Bazel
      run: sudo npm install -g @bazel/bazelisk
    - name: Install Valgrind
      run:  sudo apt install -y valgrind
    - uses: actions/checkout@v1
    - name: Run Test
      run:  bazel test --cxxopt=-std=c++14 --verbose_failures --run_under='/usr/bin/valgrind --leak-check=full --errors-for-leak-kinds=definite --error-exitcode=3' --test_output=all //Tests:APP_test_2
  Run_Test_3:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Clone GTest
      run:  git clone https://github.com/google/googletest.git
    - name: Install gtest manually
      working-directory: ./googletest
      run:  sudo apt install python3-pip &&
            cmake . &&
            make &&
            sudo make install
    - name: Install Bazel
      run: sudo npm install -g @bazel/bazelisk
    - name: Install Valgrind
      run:  sudo apt install -y valgrind
    - uses: actions/checkout@v1
    - name: Run Test
      run:  bazel test --cxxopt=-std=c++14 --verbose_failures --run_under='/usr/bin/valgrind --leak-check=full --errors-for-leak-kinds=definite --error-exitcode=3' --test_output=all //Tests:APP_test_3
  Run_Test_4:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Clone GTest
      run:  git clone https://github.com/google/googletest.git
    - name: Install gtest manually
      working-directory: ./googletest
      run:  sudo apt install python3-pip &&
            cmake . &&
            make &&
            sudo make install
    - name: Install Bazel
      run: sudo npm install -g @bazel/bazelisk
    - name: Install Valgrind
      run:  sudo apt install -y valgrind
    - uses: actions/checkout@v1
    - name: Run Test
      run:  bazel test --cxxopt=-std=c++14 --verbose_failures --run_under='/usr/bin/valgrind --leak-check=full --errors-for-leak-kinds=definite --error-exitcode=3' --test_output=all //Tests:APP_test_4
      
      #Note to add /remove tests:
      # 1) make the job here Run_Test_#
      # 2) copy the content from one of the run tests (not build)
      # 3) modify the Build file in the testing folder that holds these test scripts.

      # additional note, user code expected in: Src, Inc

      